{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/DEV/codeow/nextjs-demo-blog/pages/posts/[...tags].js\";\nimport DefaultLayout from '@layouts/default';\nimport Link from 'next/link';\nexport var __N_SSG = true;\nexport default function Blog(props) {\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    title: props.title,\n    description: props.description,\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Volumes/DEV/codeow/nextjs-demo-blog/pages/posts/[...tags].js"],"names":["DefaultLayout","Link","Blog","props","title","description"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAC/B,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAK,CAACC,KAA5B;AAAmC,IAAA,WAAW,EAAED,KAAK,CAACE,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KANuBH,I","sourcesContent":["import DefaultLayout from '@layouts/default'\nimport Link from 'next/link'\nimport { getConfig, getPostsByTags, getAllPosts } from '@api'\n\nexport default function Blog(props){\n    return (\n        <DefaultLayout title={props.title} description={props.description}>\ntest\n        </DefaultLayout>\n    )\n} \n\nexport async function getStaticProps(context){\n    const config = await getConfig()\n    const postsByTags = await getPostsByTags(context.params.tags)\n\n    return {\n        props: {\n            posts: postsByTags,\n            title: config.title,\n            description: config.description,\n            prettyTags: context.params.tags.join(\", \")\n        }\n    }\n}\n\nfunction permutations(array) {\n    function p(array, temp) {\n        var i, x;\n        if (!array.length) {\n            result.push(temp);\n        }\n        for (i = 0; i < array.length; i++) {\n            x = array.splice(i, 1)[0];\n            p(array, temp.concat(x));\n            array.splice(i, 0, x);\n        }\n    }\n\n    var result = [];\n    p(array, []);\n    return result;\n}\n\nexport async function getStaticPaths(){\n    let posts = await getAllPosts();\n    let paths = [];\n    posts.map(post => {\n        let perms = permutations(post.tags);\n        perms.map(perm => {\n            paths.push({ params: { tags: perm } })\n        });\n    });\n    return {\n        paths: paths,\n        fallback: false\n    }\n}"]},"metadata":{},"sourceType":"module"}