{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/DEV/codeow/nextjs-demo-blog/pages/tags/[slug].js\";\nimport DefaultLayout from '@layouts/default';\nimport Link from 'next/link';\nimport { getConfig, getPostsByTags, getAllPosts } from '@api';\nexport default function Blog(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  const config = await getConfig();\n  const postsByTags = await getPostsByTags(context.params.tags);\n  return {\n    props: {\n      posts: postsByTags,\n      title: config.title,\n      description: config.description,\n      prettyTags: context.params.tags.join(\", \")\n    }\n  };\n}\n\nfunction permutations(array) {\n  function p(array, temp) {\n    var i, x;\n\n    if (!array.length) {\n      result.push(temp);\n    }\n\n    for (i = 0; i < array.length; i++) {\n      x = array.splice(i, 1)[0];\n      p(array, temp.concat(x));\n      array.splice(i, 0, x);\n    }\n  }\n\n  var result = [];\n  p(array, []);\n  return result;\n}\n\nexport async function getStaticPaths() {\n  let paths = await getAllPosts();\n  paths = paths.map(tag => ({\n    params: {\n      slug: tag.slug\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Volumes/DEV/codeow/nextjs-demo-blog/pages/tags/[slug].js"],"names":["DefaultLayout","Link","getConfig","getPostsByTags","getAllPosts","Blog","props","getStaticProps","context","config","postsByTags","params","tags","posts","title","description","prettyTags","join","permutations","array","p","temp","i","x","length","result","push","splice","concat","getStaticPaths","paths","map","tag","slug","fallback"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,WAApC,QAAuD,MAAvD;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAC/B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMC,MAAM,GAAG,MAAMP,SAAS,EAA9B;AACA,QAAMQ,WAAW,GAAG,MAAMP,cAAc,CAACK,OAAO,CAACG,MAAR,CAAeC,IAAhB,CAAxC;AAEA,SAAO;AACHN,IAAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEH,WADJ;AAEHI,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAFX;AAGHC,MAAAA,WAAW,EAAEN,MAAM,CAACM,WAHjB;AAIHC,MAAAA,UAAU,EAAER,OAAO,CAACG,MAAR,CAAeC,IAAf,CAAoBK,IAApB,CAAyB,IAAzB;AAJT;AADJ,GAAP;AAQH;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,WAASC,CAAT,CAAWD,KAAX,EAAkBE,IAAlB,EAAwB;AACpB,QAAIC,CAAJ,EAAOC,CAAP;;AACA,QAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB;AACfC,MAAAA,MAAM,CAACC,IAAP,CAAYL,IAAZ;AACH;;AACD,SAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,KAAK,CAACK,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AAC/BC,MAAAA,CAAC,GAAGJ,KAAK,CAACQ,MAAN,CAAaL,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAJ;AACAF,MAAAA,CAAC,CAACD,KAAD,EAAQE,IAAI,CAACO,MAAL,CAAYL,CAAZ,CAAR,CAAD;AACAJ,MAAAA,KAAK,CAACQ,MAAN,CAAaL,CAAb,EAAgB,CAAhB,EAAmBC,CAAnB;AACH;AACJ;;AAED,MAAIE,MAAM,GAAG,EAAb;AACAL,EAAAA,CAAC,CAACD,KAAD,EAAQ,EAAR,CAAD;AACA,SAAOM,MAAP;AACH;;AAED,OAAO,eAAeI,cAAf,GAA+B;AAClC,MAAIC,KAAK,GAAG,MAAM1B,WAAW,EAA7B;AACA0B,EAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAUC,GAAG,KAAK;AACxBrB,IAAAA,MAAM,EAAE;AAAEsB,MAAAA,IAAI,EAACD,GAAG,CAACC;AAAX;AADgB,GAAL,CAAb,CAAR;AAGA,SAAO;AACLH,IAAAA,KAAK,EAAEA,KADF;AAELI,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAIH","sourcesContent":["import DefaultLayout from '@layouts/default'\nimport Link from 'next/link'\nimport { getConfig, getPostsByTags, getAllPosts } from '@api'\n\nexport default function Blog(props){\n    return (\n        <div>\n           test\n        </div>\n    )\n} \n\nexport async function getStaticProps(context){\n    const config = await getConfig()\n    const postsByTags = await getPostsByTags(context.params.tags)\n\n    return {\n        props: {\n            posts: postsByTags,\n            title: config.title,\n            description: config.description,\n            prettyTags: context.params.tags.join(\", \")\n        }\n    }\n}\n\nfunction permutations(array) {\n    function p(array, temp) {\n        var i, x;\n        if (!array.length) {\n            result.push(temp);\n        }\n        for (i = 0; i < array.length; i++) {\n            x = array.splice(i, 1)[0];\n            p(array, temp.concat(x));\n            array.splice(i, 0, x);\n        }\n    }\n\n    var result = [];\n    p(array, []);\n    return result;\n}\n\nexport async function getStaticPaths(){\n    let paths = await getAllPosts()\n    paths = paths.map(tag => ({\n      params: { slug:tag.slug }\n    }));\n    return {\n      paths: paths,\n      fallback: false\n    }\n}"]},"metadata":{},"sourceType":"module"}