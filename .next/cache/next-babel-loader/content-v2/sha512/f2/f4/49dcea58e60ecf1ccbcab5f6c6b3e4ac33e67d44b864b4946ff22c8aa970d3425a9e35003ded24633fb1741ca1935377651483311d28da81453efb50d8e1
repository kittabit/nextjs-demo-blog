{"ast":null,"code":"import matter from 'gray-matter';\nimport marked from 'marked';\nimport yaml from 'js-yaml';\nexport async function getConfig() {\n  const config = await import(`../config.yml`);\n  return yaml.load(config.default);\n}\nexport async function getAllPosts() {\n  const context = require.context('../_posts', false, /\\.md$/);\n\n  const posts = [];\n\n  for (const key of context.keys()) {\n    const post = key.slice(2);\n    const content = await import(`../_posts/${post}`);\n    const meta = matter(content.default);\n    posts.push({\n      slug: post.replace('.md', ''),\n      title: meta.data.title,\n      tags: meta.data.tags\n    });\n  }\n\n  return posts;\n}\nexport async function getPostsByTags(tags) {\n  const context = require.context('../_posts', false, /\\.md$/);\n\n  const posts = [];\n\n  for (const key of context.keys()) {\n    const post = key.slice(2);\n    const content = await import(`../_posts/${post}`);\n    const meta = matter(content.default);\n\n    if (meta.data.tags.some(r => tags.includes(r))) {\n      posts.push({\n        slug: post.replace('.md', ''),\n        title: meta.data.title,\n        tags: meta.data.tags\n      });\n    }\n  }\n\n  return posts;\n}\nexport async function getPostBySlug(slug) {\n  const fileContent = await import(`../_posts/${slug}.md`);\n  const meta = matter(fileContent.default);\n  const content = marked(meta.content);\n  return {\n    title: meta.data.title,\n    content: content\n  };\n}","map":{"version":3,"sources":["/Volumes/DEV/codeow/nextjs-demo-blog/_api/index.js"],"names":["matter","marked","yaml","getConfig","config","load","default","getAllPosts","context","require","posts","key","keys","post","slice","content","meta","push","slug","replace","title","data","tags","getPostsByTags","some","r","includes","getPostBySlug","fileContent"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,eAAeC,SAAf,GAA2B;AAChC,QAAMC,MAAM,GAAG,MAAM,OAAQ,eAAR,CAArB;AACA,SAAOF,IAAI,CAACG,IAAL,CAAUD,MAAM,CAACE,OAAjB,CAAP;AACD;AAED,OAAO,eAAeC,WAAf,GAA6B;AAClC,QAAMC,OAAO,GAAGC,OAAO,CAACD,OAAR,CAAgB,WAAhB,EAA6B,KAA7B,EAAoC,OAApC,CAAhB;;AACA,QAAME,KAAK,GAAG,EAAd;;AACA,OAAI,MAAMC,GAAV,IAAiBH,OAAO,CAACI,IAAR,EAAjB,EAAgC;AAC9B,UAAMC,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAb;AACA,UAAMC,OAAO,GAAG,MAAM,OAAQ,aAAYF,IAAK,EAAzB,CAAtB;AACA,UAAMG,IAAI,GAAGhB,MAAM,CAACe,OAAO,CAACT,OAAT,CAAnB;AACAI,IAAAA,KAAK,CAACO,IAAN,CAAW;AACTC,MAAAA,IAAI,EAAEL,IAAI,CAACM,OAAL,CAAa,KAAb,EAAmB,EAAnB,CADG;AAETC,MAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAL,CAAUD,KAFR;AAGTE,MAAAA,IAAI,EAAEN,IAAI,CAACK,IAAL,CAAUC;AAHP,KAAX;AAKD;;AACD,SAAOZ,KAAP;AACD;AAED,OAAO,eAAea,cAAf,CAA8BD,IAA9B,EAAmC;AACxC,QAAMd,OAAO,GAAGC,OAAO,CAACD,OAAR,CAAgB,WAAhB,EAA6B,KAA7B,EAAoC,OAApC,CAAhB;;AACA,QAAME,KAAK,GAAG,EAAd;;AACA,OAAI,MAAMC,GAAV,IAAiBH,OAAO,CAACI,IAAR,EAAjB,EAAgC;AAC5B,UAAMC,IAAI,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAb;AACA,UAAMC,OAAO,GAAG,MAAM,OAAQ,aAAYF,IAAK,EAAzB,CAAtB;AACA,UAAMG,IAAI,GAAGhB,MAAM,CAACe,OAAO,CAACT,OAAT,CAAnB;;AACA,QAAGU,IAAI,CAACK,IAAL,CAAUC,IAAV,CAAeE,IAAf,CAAoBC,CAAC,IAAGH,IAAI,CAACI,QAAL,CAAcD,CAAd,CAAxB,CAAH,EAA8C;AAC1Cf,MAAAA,KAAK,CAACO,IAAN,CAAW;AACPC,QAAAA,IAAI,EAAEL,IAAI,CAACM,OAAL,CAAa,KAAb,EAAmB,EAAnB,CADC;AAEPC,QAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAL,CAAUD,KAFV;AAGPE,QAAAA,IAAI,EAAEN,IAAI,CAACK,IAAL,CAAUC;AAHT,OAAX;AAKH;AACJ;;AACD,SAAOZ,KAAP;AACD;AAED,OAAO,eAAeiB,aAAf,CAA6BT,IAA7B,EAAmC;AACxC,QAAMU,WAAW,GAAG,MAAM,OAAQ,aAAYV,IAAK,KAAzB,CAA1B;AACA,QAAMF,IAAI,GAAGhB,MAAM,CAAC4B,WAAW,CAACtB,OAAb,CAAnB;AACA,QAAMS,OAAO,GAAGd,MAAM,CAACe,IAAI,CAACD,OAAN,CAAtB;AACA,SAAO;AACLK,IAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAL,CAAUD,KADZ;AAELL,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID","sourcesContent":["import matter from 'gray-matter'\nimport marked from 'marked'\nimport yaml from 'js-yaml'\n\nexport async function getConfig() {\n  const config = await import(`../config.yml`)\n  return yaml.load(config.default)\n}\n\nexport async function getAllPosts() {\n  const context = require.context('../_posts', false, /\\.md$/)\n  const posts = []\n  for(const key of context.keys()){\n    const post = key.slice(2);\n    const content = await import(`../_posts/${post}`);\n    const meta = matter(content.default)\n    posts.push({\n      slug: post.replace('.md',''),\n      title: meta.data.title,\n      tags: meta.data.tags      \n    })\n  }\n  return posts;\n}\n\nexport async function getPostsByTags(tags){\n  const context = require.context('../_posts', false, /\\.md$/)\n  const posts = []\n  for(const key of context.keys()){\n      const post = key.slice(2);\n      const content = await import(`../_posts/${post}`);\n      const meta = matter(content.default)\n      if(meta.data.tags.some(r=> tags.includes(r))) {\n          posts.push({\n              slug: post.replace('.md',''),\n              title: meta.data.title,\n              tags: meta.data.tags\n          });\n      }\n  }\n  return posts;\n}\n\nexport async function getPostBySlug(slug) {\n  const fileContent = await import(`../_posts/${slug}.md`)\n  const meta = matter(fileContent.default)\n  const content = marked(meta.content)    \n  return {\n    title: meta.data.title, \n    content: content\n  }\n}"]},"metadata":{},"sourceType":"module"}